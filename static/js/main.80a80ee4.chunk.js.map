{"version":3,"sources":["store/game.js","component/clock.js","component/score-panel.js","component/score-board.js","component/player-panel.js","component/team-panel.js","component/share-panel.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["initialState","gameClock","shotClock","teamA","player1","point","foul","player2","player3","player4","teamB","Clock","state","isPause","this","setState","interval","setInterval","props","decreaseClockSecond","clearInterval","resetShotClock","min","Math","floor","sec","padStart","className","onClick","toggleClock","resolveGameClock","resolveShotClock","React","Component","connect","game","dispatch","milsec","millSec","type","data","ScorePanel","teamInfo","team","ownProps","pk","ScoreBoard","PlayerPanel","playerInfo","player","increasePlayerPoint","decreasePlayerPoint","increasePlayerFoul","attr","TeamPanelHeader","TeamPanel","SharePanel","EmailShareButton","subject","body","JSON","stringify","EmailIcon","size","round","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","newGameClock","max","newShotClock","Object","assign","tk","ak","update","$set","ReactDOM","render","store","createStore","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80a80ee4.chunk.js","sourcesContent":["import update from 'immutability-helper';\r\n\r\nconst DECREASE_GAME_CLOCK = \"DECREASE_GAME_CLOCK\";\r\nconst RESET_SHOT_CLOCK = \"RESET_SHOT_CLOCK\";\r\nconst INCREASE_PLAYER_POINT = \"INCREASE_PLAYER_POINT\";\r\nconst DECREASE_PLAYER_POINT = \"DECREASE_PLAYER_POINT\";\r\nconst INCREASE_PLAYER_FOUL = \"INCREASE_PLAYER_FOUL\";\r\nconst DECREASE_PLAYER_FOUL = \"DECREASE_PLAYER_FOUL\";\r\n\r\nexport const decreaseClockSecond = (millSec = 1000) => ({\r\n    type: DECREASE_GAME_CLOCK,\r\n    data: millSec\r\n});\r\n\r\nexport const resetShotClock = () => ({\r\n    type: RESET_SHOT_CLOCK\r\n});\r\n\r\nexport const increasePlayerPoint = (team, player) => ({\r\n    type: INCREASE_PLAYER_POINT,\r\n    data: { team, player, attr: \"point\" }\r\n});\r\n\r\nexport const decreasePlayerPoint = (team, player) => ({\r\n    type: DECREASE_PLAYER_POINT,\r\n    data: { team, player, attr: \"point\" }\r\n});\r\n\r\nexport const increasePlayerFoul = (team, player) => ({\r\n    type: INCREASE_PLAYER_FOUL,\r\n    data: { team, player, attr: \"foul\" }\r\n});\r\n\r\nexport const decreasePlayerFoul = (team, player) => ({\r\n    type: DECREASE_PLAYER_FOUL,\r\n    data: { team, player, attr: \"foul\" }\r\n});\r\n\r\nexport const initialState = {\r\n    gameClock: 1000 * 60 * 12,\r\n    shotClock: 1000 * 12,\r\n    teamA: {\r\n        player1: {\r\n            point: 0,\r\n            foul: 0\r\n        },\r\n        player2: {\r\n            point: 0,\r\n            foul: 0\r\n        },\r\n        player3: {\r\n            point: 0,\r\n            foul: 0\r\n        },\r\n        player4: {\r\n            point: 0,\r\n            foul: 0\r\n        }\r\n    },\r\n    teamB: {\r\n        player1: {\r\n            point: 0,\r\n            foul: 0\r\n        },\r\n        player2: {\r\n            point: 0,\r\n            foul: 0\r\n        },\r\n        player3: {\r\n            point: 0,\r\n            foul: 0\r\n        },\r\n        player4: {\r\n            point: 0,\r\n            foul: 0\r\n        }\r\n    }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DECREASE_GAME_CLOCK:\r\n            let newGameClock = Math.max(0, state.gameClock - action.data);\r\n            let newShotClock = Math.max(0, state.shotClock - action.data);\r\n            return Object.assign({}, state, { gameClock: newGameClock, shotClock: newShotClock });\r\n        case RESET_SHOT_CLOCK:\r\n            return Object.assign({}, state, { shotClock: initialState.shotClock });\r\n        case INCREASE_PLAYER_POINT:\r\n        case INCREASE_PLAYER_FOUL:\r\n            {\r\n                const tk = action.data.team;\r\n                const pk = action.data.player;\r\n                const ak = action.data.attr;\r\n                return update(state, { [tk]: { [pk]: { [ak]: { $set: state[tk][pk][ak] + 1 } } } });\r\n            }\r\n        case DECREASE_PLAYER_POINT:\r\n        case DECREASE_PLAYER_FOUL:\r\n            {\r\n                const tk = action.data.team;\r\n                const pk = action.data.player;\r\n                const ak = action.data.attr;\r\n                return update(state, { [tk]: { [pk]: { [ak]: { $set: Math.max(0,state[tk][pk][ak] - 1) } } } });\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { decreaseClockSecond, resetShotClock } from '../store/game';\r\n\r\nclass Clock extends React.Component {\r\n    static propTypes = {\r\n        gameClock: PropTypes.number,\r\n        shotClock: PropTypes.number,\r\n        decreaseClockSecond: PropTypes.func,\r\n        resetShotClock: PropTypes.func\r\n    }\r\n\r\n    state = {\r\n        isPause: true\r\n    }\r\n\r\n    toggleClock() {\r\n        if (this.state.isPause) {\r\n            this.setState({ isPause: false }, () => {\r\n                this.interval = setInterval(() => {this.props.decreaseClockSecond(100)}, 100);\r\n            });\r\n        } else {\r\n            this.setState({ isPause: true }, () => {\r\n                clearInterval(this.interval);\r\n            });\r\n        }\r\n    }\r\n\r\n    resetShotClock() {\r\n        this.props.resetShotClock();\r\n    }\r\n\r\n    resolveGameClock(gameClock) {\r\n        const min = Math.floor(gameClock/(1000*60));\r\n        const sec = (Math.floor((gameClock%(1000*60))/1000)+'').padStart(2,'0');\r\n        return `${min}:${sec}`;\r\n    }\r\n\r\n    resolveShotClock(shotClock) {\r\n        return `${shotClock/1000}`;\r\n    }\r\n\r\n    render() {\r\n        const { gameClock, shotClock } = this.props;\r\n\r\n        return (\r\n            <div className={\"clock\"}>\r\n                <button onClick={() => { this.toggleClock() }}>{this.resolveGameClock(gameClock)}</button>\r\n                <button onClick={() => { this.resetShotClock() }}>{this.resolveShotClock(shotClock)}</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({game}) => ({\r\n    gameClock: game.gameClock,\r\n    shotClock: game.shotClock\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    decreaseClockSecond: (milsec) => dispatch(decreaseClockSecond(milsec)),\r\n    resetShotClock: () => dispatch(resetShotClock())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clock);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ScorePanel extends React.Component {\r\n    render() {\r\n        const { teamInfo: { point, foul }, team} = this.props;\r\n        return (\r\n            <div className={\"scorepanel\"}>\r\n                <div className={\"team\"}>{team}</div>\r\n                <div className={\"point\"}>{point}</div>\r\n                <div className={\"foul\"}>{foul}</div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ game }, ownProps) => {\r\n    const team = game[ownProps.team]\r\n    const teamInfo = { point: 0, foul: 0 };\r\n    for (let pk in team) {\r\n        teamInfo.point += team[pk].point;\r\n        teamInfo.foul += team[pk].foul;\r\n    }\r\n    return { teamInfo };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ScorePanel);","import React from 'react';\r\nimport Clock from './clock';\r\nimport ScorePanel from './score-panel';\r\n\r\nclass ScoreBoard extends React.Component {\r\n    static propTypes = {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"scoreboard\">\r\n                <ScorePanel team={\"teamA\"}/>\r\n                <Clock />\r\n                <ScorePanel team={\"teamB\"}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ScoreBoard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { increasePlayerPoint, decreasePlayerPoint, increasePlayerFoul } from '../store/game';\r\n\r\nclass PlayerPanel extends React.Component {\r\n    static propTypes = {\r\n        increasePlayerPoint: PropTypes.func,\r\n        decreasePlayerPoint: PropTypes.func\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { playerInfo: { point, foul }, player } = this.props;\r\n        return (\r\n            <div className=\"playerpanel\">\r\n                <div className=\"info\">\r\n                    <div className=\"name\">{player}</div>\r\n                    <div className=\"point\">{point}</div>\r\n                    <div className=\"foul\">{foul}</div>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <button className=\"plus\" onClick={() => { this.props.increasePlayerPoint() }}>+</button>\r\n                    <button className=\"minus\" onClick={() => { this.props.decreasePlayerPoint() }}>-</button>\r\n                    <button className=\"foul\" onClick={() => { this.props.increasePlayerFoul() }}>Foul</button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ game }, ownProps) => {\r\n    return { playerInfo: game[ownProps.team][ownProps.player] };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { team, player }) => ({\r\n    increasePlayerPoint: () => dispatch(increasePlayerPoint(team, player)),\r\n    decreasePlayerPoint: () => dispatch(decreasePlayerPoint(team, player)),\r\n    increasePlayerFoul: () => dispatch(increasePlayerFoul(team, player)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerPanel);","import React from 'react';\r\nimport PlayerPanel from './player-panel';\r\n\r\nexport function TeamPanelHeader(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"info\">\r\n                <div className=\"name\">name</div>\r\n                <div className=\"point\">point</div>\r\n                <div className=\"foul\">foul</div>\r\n            </div>\r\n            <div className=\"info\">\r\n                <div className=\"name\">name</div>\r\n                <div className=\"point\">point</div>\r\n                <div className=\"foul\">foul</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TeamPanel(props) {\r\n    return (\r\n        <div className=\"teampanel\">\r\n            <PlayerPanel team={props.team} player={\"player1\"} />\r\n            <PlayerPanel team={props.team} player={\"player2\"} />\r\n            <PlayerPanel team={props.team} player={\"player3\"} />\r\n            <PlayerPanel team={props.team} player={\"player4\"} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeamPanel;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EmailShareButton, EmailIcon } from 'react-share';\r\n\r\nclass SharePanel extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <EmailShareButton subject={'Test'} body={JSON.stringify(this.props.game)}>\r\n                <EmailIcon size={32} round={true} />\r\n            </EmailShareButton>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ game }) => {\r\n    return {game};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SharePanel);","import React from 'react';\nimport './App.css';\nimport ScoreBoard from './component/score-board';\nimport TeamPanel, {TeamPanelHeader} from './component/team-panel';\nimport SharePanel from './component/share-panel';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"scorecontainer\">\n                <ScoreBoard />\n            </div>\n            <TeamPanelHeader/>\n            <div className=\"teamcontainer\">                \n                <TeamPanel team={'teamA'} />\n                <TeamPanel team={'teamB'} />\n            </div>\n            <div className=\"sharecontainer\">\n                <SharePanel/>\n            </div>            \n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport gameReducer, {initialState} from './game';\r\n\r\nconst rootReducer = combineReducers({\r\n    game: gameReducer\r\n})\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}